env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "M1+7Zx4c8zTEIwUbAh8p9f8ZZ0jI9E9EAgCRgun6dO4G8wjfF/F44YLTZTqC2qMPKd4yPIm/p43y5qXxFNWFhTRsobeg6wVhoOOOCAB4AmndT212xh6aXu+U3lqT3z7gl8kDhxTS2liEzl0L22a9ljREsuMOIzU8lPFWvLdvm6k="
   # Coverity run condition (avoid matrix multiple runs), need customized
   # build script. Need an update if new matrix cases.
   - coverity_scan_run_condition='"$CC" = gcc -a "$TRAVIS_OS_NAME" != osx'
   # Coverity script test mode (if true no uploading, avoid reaching the quota)
   # usual processing: false.
   - coverity_scan_script_test_mode=false

os:
  - linux
  - osx

language: cpp

compiler:
  - gcc
  - clang

matrix:
  exclude:
    - os: osx
      compiler: gcc
  fast_finish: true

# ubuntu-toolchain-r/test contains recent versions of gcc
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-4.8
    - g++-4.8
    - doxygen
    - xsltproc
    
# Travis CI has 1.5 cores per VM, take advantage of it
# But first, the makefiles have to be fixed: all plugins are using the same .o's
#env:
#  - MAKEFLAGS="-j 2"

# set BUILDDOC to 1 to build documentation on travis
env:
  - BUILDDOC=0

before_install:
  - date -u
  - uname -a
#  - export J='-j3'

install:
  - git submodule update --init --recursive
  - if [[ ${COVERITY_BUILD_DISABLED} == 1 ]];
    then
        exit 0;
    fi
  - if [ ${TRAVIS_OS_NAME} = "linux" -a "$CC" = "gcc" ];
    then
        if [ "$BUILDDOC" = 1 ]; then
            sudo apt-get install doxygen xsltproc;
        fi
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
        sudo apt-get update;
        sudo apt-get install gcc-4.8 g++-4.8;
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 90;
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90;
    fi

script:
  - if [[ ${COVERITY_SCAN_BRANCH} == 1 ]];
    then
      echo "Don't build on coverity_scan branch.";
      exit 0;
    fi
  - make $J CONFIG=debug
  - make clean CONFIG=debug
  - make $J -C HostSupport DEBUG=true OPTIMIZE="-g -Wall -DOFX_EXTENSIONS_VEGAS -DOFX_EXTENSIONS_NUKE -DOFX_EXTENSIONS_NATRON -DOFX_EXTENSIONS_TUTTLE -DOFX_DEBUG_ACTIONS -DOFX_DEBUG_PARAMETERS -DOFX_DEBUG_PROPERTIES -DOFX_SUPPORTS_OPENGLRENDER -DOFX_SUPPORTS_DIALOG"
  - if [ ${TRAVIS_OS_NAME} = "linux" -a "$CC" = "gcc" -a "$BUILDDOC" = 1 ];
    then
        make -C Documentation;
    fi

addons:
  coverity_scan:
    # customized build script URL
    # TRAVIS_REPO_SLUG: owner_name/repo_name of repository currently being built
    # TRAVIS_BRANCH: name of the branch currently being built
    build_script_url: https://raw.githubusercontent.com/$TRAVIS_REPO_SLUG/$TRAVIS_BRANCH/.travis-coverity-scan-build.sh
    # project metadata
    project:
      name: $TRAVIS_REPO_SLUG
    # Where email notification of build analysis results will be sent
    notification_email: frederic.devernay@m4x.org
    # Commands to prepare for build_command
    #build_command_prepend: ./configure
    # This command will be added as an argument to "cov-build" to compile
    # the project for analysis
    build_command: "make $J CONFIG=debug"
    # Pattern to match selecting branches that will run analysis
    branch_pattern: coverity_scan

# Local Variables:
# indent-tabs-mode: nil
# coding: utf-8
# End: