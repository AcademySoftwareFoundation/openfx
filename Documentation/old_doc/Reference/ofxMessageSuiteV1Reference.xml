
<refentry id="OfxMessageSuiteV1">
  <refmeta>
    <refentrytitle><type>OfxMessageSuiteV1</type></refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><function>OfxMessageSuiteV1</function></refname>
    <refpurpose>The OFX suite that allows a plug-in to pass messages back to a user. The V2 suite extends on this</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
     <blockquote><programlisting>
#include "ofxMessage.h"
typedef struct OfxMessageSuiteV1 {
  OfxStatus (*message)(void *handle,
		       const char *messageType,
		       const char *messageId,
		       const char *format,
		       ...);
} OfxMessageSuiteV1;

</programlisting></blockquote>
     </refsynopsisdiv>
    <refsect1>
      <title>Description</title><para>
in a backwards compatible manner.
</para>
    </refsect1>
</refentry>

<refentry id="OfxMessageSuiteV1_message">
  <refmeta>
    <refentrytitle><function>OfxMessageSuiteV1::message</function></refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><function>OfxMessageSuiteV1::message</function></refname>
       <refpurpose>Post a message on the host, using printf style varargs</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include "ofxMessage.h" </funcsynopsisinfo>
      <funcprototype>
        <funcdef><typename>OfxStatus</typename><function>(*message)</function></funcdef>
              <paramdef>void *<parameter>handle</parameter></paramdef>
              <paramdef>const char *<parameter>messageType</parameter></paramdef>
              <paramdef>const char *<parameter>messageId</parameter></paramdef>
              <paramdef>const char *<parameter>format</parameter></paramdef>
              <paramdef><parameter>...</parameter></paramdef>
        </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect2>
   <title>Arguments</title>
   <itemizedlist>

<listitem>handle - effect handle (descriptor or instance) the message should be associated with, may be null
</listitem>
<listitem>messageType - string describing the kind of message to post, one of the kOfxMessageType constants
</listitem>
<listitem>messageId - plugin specified id to associate with this message. If overriding the message in XML resource, the message is identified with this, this may be NULL, or "", in which case no override will occur,
</listitem>
<listitem>format - printf style format string
</listitem>
<listitem>... - printf style varargs list to print
</listitem>
    </itemizedlist>
  </refsect2>
  <refsect2>
    <title>Description</title>
      <para>
\returns 

<itemizedlist>
  <listitem><link linkend="kOfxStatOK"><code>kOfxStatOK</code></link> - if the message was sucessfully posted </listitem>
  <listitem><link linkend="kOfxStatReplyYes"><code>kOfxStatReplyYes</code></link> - if the message was of type  kOfxMessageQuestion and the user reply yes</listitem>
  <listitem><link linkend="kOfxStatReplyNo"><code>kOfxStatReplyNo</code></link> - if the message was of type kOfxMessageQuestion and the user reply no</listitem>
  <listitem><link linkend="kOfxStatFailed"><code>kOfxStatFailed</code></link> - if the message could not be posted for some reason</listitem>
</itemizedlist>
</para>

  </refsect2>

</refentry>
